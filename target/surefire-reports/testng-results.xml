<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="6" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="31030" started-at="2020-04-14T16:42:20Z" finished-at="2020-04-14T16:42:51Z">
    <groups>
      <group name="regression">
        <method signature="BankTest.bankManagerShouldAddCustomerSuccessfully()[pri:0, instance:com.bank.testsuite.BankTest@13a57a3b]" name="bankManagerShouldAddCustomerSuccessfully" class="com.bank.testsuite.BankTest"/>
        <method signature="BankTest.bankManagerShouldDeleteCustomerSuccessfully()[pri:5, instance:com.bank.testsuite.BankTest@13a57a3b]" name="bankManagerShouldDeleteCustomerSuccessfully" class="com.bank.testsuite.BankTest"/>
        <method signature="BankTest.bankManagerShouldOpenAccountSuccessfully()[pri:1, instance:com.bank.testsuite.BankTest@13a57a3b]" name="bankManagerShouldOpenAccountSuccessfully" class="com.bank.testsuite.BankTest"/>
        <method signature="BankTest.customerShouldDepositMoneySuccessfully()[pri:3, instance:com.bank.testsuite.BankTest@13a57a3b]" name="customerShouldDepositMoneySuccessfully" class="com.bank.testsuite.BankTest"/>
        <method signature="BankTest.customerShouldLoginAndLogoutSuccessfully()[pri:2, instance:com.bank.testsuite.BankTest@13a57a3b]" name="customerShouldLoginAndLogoutSuccessfully" class="com.bank.testsuite.BankTest"/>
        <method signature="BankTest.customerShouldWithdrawMoneySuccessfully()[pri:4, instance:com.bank.testsuite.BankTest@13a57a3b]" name="customerShouldWithdrawMoneySuccessfully" class="com.bank.testsuite.BankTest"/>
      </group> <!-- regression -->
    </groups>
    <test name="Surefire test" duration-ms="31030" started-at="2020-04-14T16:42:20Z" finished-at="2020-04-14T16:42:51Z">
      <class name="com.bank.testsuite.BankTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.bank.testsuite.BankTest@13a57a3b]" name="setUp" is-config="true" duration-ms="43" started-at="2020-04-14T16:42:20Z" finished-at="2020-04-14T16:42:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="openBrowser()[pri:0, instance:com.bank.testsuite.BankTest@13a57a3b]" name="openBrowser" is-config="true" duration-ms="17740" started-at="2020-04-14T16:42:20Z" finished-at="2020-04-14T16:42:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method status="PASS" signature="bankManagerShouldAddCustomerSuccessfully()[pri:0, instance:com.bank.testsuite.BankTest@13a57a3b]" name="bankManagerShouldAddCustomerSuccessfully" duration-ms="4643" started-at="2020-04-14T16:42:38Z" finished-at="2020-04-14T16:42:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bankManagerShouldAddCustomerSuccessfully -->
        <test-method status="PASS" signature="bankManagerShouldOpenAccountSuccessfully()[pri:1, instance:com.bank.testsuite.BankTest@13a57a3b]" name="bankManagerShouldOpenAccountSuccessfully" duration-ms="1551" started-at="2020-04-14T16:42:42Z" finished-at="2020-04-14T16:42:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bankManagerShouldOpenAccountSuccessfully -->
        <test-method status="PASS" signature="customerShouldLoginAndLogoutSuccessfully()[pri:2, instance:com.bank.testsuite.BankTest@13a57a3b]" name="customerShouldLoginAndLogoutSuccessfully" duration-ms="1923" started-at="2020-04-14T16:42:44Z" finished-at="2020-04-14T16:42:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customerShouldLoginAndLogoutSuccessfully -->
        <test-method status="PASS" signature="customerShouldDepositMoneySuccessfully()[pri:3, instance:com.bank.testsuite.BankTest@13a57a3b]" name="customerShouldDepositMoneySuccessfully" duration-ms="1646" started-at="2020-04-14T16:42:46Z" finished-at="2020-04-14T16:42:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customerShouldDepositMoneySuccessfully -->
        <test-method status="PASS" signature="customerShouldWithdrawMoneySuccessfully()[pri:4, instance:com.bank.testsuite.BankTest@13a57a3b]" name="customerShouldWithdrawMoneySuccessfully" duration-ms="1483" started-at="2020-04-14T16:42:47Z" finished-at="2020-04-14T16:42:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customerShouldWithdrawMoneySuccessfully -->
        <test-method status="PASS" signature="bankManagerShouldDeleteCustomerSuccessfully()[pri:5, instance:com.bank.testsuite.BankTest@13a57a3b]" name="bankManagerShouldDeleteCustomerSuccessfully" duration-ms="917" started-at="2020-04-14T16:42:49Z" finished-at="2020-04-14T16:42:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bankManagerShouldDeleteCustomerSuccessfully -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.bank.testsuite.BankTest@13a57a3b]" name="tearDown" is-config="true" duration-ms="1011" started-at="2020-04-14T16:42:50Z" finished-at="2020-04-14T16:42:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.bank.testsuite.BankTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
